{"head":{"title":"Processing Multi-Stage Tasks using Firebase Queue","date":"2016-08-23T00:00:00.000Z","layout":"Post","link":"http://asankan.info/2016/08/23/processing-multi-stage-tasks-using-firebase-queue/","author":"asankanissanka","description":"Processing Multi-Stage Tasks using Firebase Queue This is an implementation of Pipes and Filter Pattern which is a commonly used Cloud…","post_id":180,"created":"2016/08/23 23:54:55","created_gmt":"2016/08/23 18:24:55","comment_status":"open","post_name":"processing-multi-stage-tasks-using-firebase-queue","status":"publish","post_type":"post"},"body":"<h1 id=\"processing-multi-stage-tasks-using-firebase-queue\"><a href=\"#processing-multi-stage-tasks-using-firebase-queue\" class=\"phenomic-HeadingAnchor\">#</a>Processing Multi-Stage Tasks using Firebase Queue</h1>\n<p>This is an implementation of <a href=\"https://msdn.microsoft.com/en-us/library/dn568100.aspx\">Pipes and Filter Pattern</a> which is a commonly used <a href=\"https://msdn.microsoft.com/en-us/library/dn568099.aspx\">Cloud Design Pattern</a>. The most common approach to implement this pattern is via multiple queues as shown in the following figure.</p>\n<p><img src=\"https://asankanissanka.files.wordpress.com/2016/08/ic709558.png\" alt=\"ic709558\"></p>\n<h6 id=\"pipeline-using-multiple-queues-ref--msdn\"><a href=\"#pipeline-using-multiple-queues-ref--msdn\" class=\"phenomic-HeadingAnchor\">#</a>Pipeline Using Multiple Queues (<a href=\"https://msdn.microsoft.com/en-us/library/dn568100.aspx\">Ref : MSDN</a>)</h6>\n<p>The prosed solution here uses a bit different approach than above and use a single queue instead of multiple queues as shown below.</p>\n<p><img src=\"https://asankanissanka.files.wordpress.com/2016/08/data-flow-diagram.png\" alt=\"Data Flow Diagram\"></p>\n<h6 id=\"pipeline-using-a-single-queue\"><a href=\"#pipeline-using-a-single-queue\" class=\"phenomic-HeadingAnchor\">#</a>Pipeline Using a Single Queue</h6>\n<p>To practically implement a solution like above the common approach would be to maintain a state for each queue message and assign a state for each workers(filters) to filter the messages accordingly before execution. However recently when I was trying out <a href=\"https://firebase.google.com/docs/database/\">Firebase Realtime Database</a> I found <a href=\"https://github.com/firebase/firebase-queue\">Firebase Queue</a> which is a queue implementation on top of the Firebase Realtime Database and it turned out that it comes with a out of the box solution for maintaining a state (their term is <a href=\"https://github.com/firebase/firebase-queue/blob/master/docs/guide.md#defining-specs-optional\">specs</a>) for queue messages as described above. So I worked on a PoC to evaluate this and in my personal opinion it's really cool. But this is not enough to make a dicission so I was looking at various benefits we can achieve here with the usage of <a href=\"https://firebase.google.com/docs/database/\">Firebase Realtime Database</a>.</p>\n<h3 id=\"benefits\"><a href=\"#benefits\" class=\"phenomic-HeadingAnchor\">#</a>Benefits</h3>\n<ul>\n<li>Using firebase realtime behaviour we can easily show the progress of the running tasks on a front-end</li>\n<li>Since it's single queue it's less hazzle to implement and maintain</li>\n<li>Uses push instead of polling to notify workers about new tasks</li>\n<li>Implementation has been made super easy with their library</li>\n<li>Nicely support to be run in a clustered environment distributing workload among nodes</li>\n</ul>\n<h3 id=\"use-cases\"><a href=\"#use-cases\" class=\"phenomic-HeadingAnchor\">#</a>Use Cases</h3>\n<ul>\n<li>In scenarios where REST APIs facilitate time consuming processing heavy back­end functions</li>\n<li>In scenarios where triggered background tasks run for streaming data</li>\n</ul>\n","__filename":"posts/20160823-processing-multi-stage-tasks-using-firebase-queue.md","__url":"/posts/20160823-processing-multi-stage-tasks-using-firebase-queue/","__resourceUrl":"/posts/20160823-processing-multi-stage-tasks-using-firebase-queue/index.html","__dataUrl":"/posts/20160823-processing-multi-stage-tasks-using-firebase-queue/index.html.c0573840ab2cf485605c22d617c1aa48.json"}